stages:
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py
    deps:
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion

  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
    deps:
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
      - params.yaml
    params:
      - IMAGE_HEIGHT
      - IMAGE_WIDTH
      - CLASSES
      - BASE_MODEL.INCLUDE_TOP
      - BASE_MODEL.WEIGHTS
      - BASE_MODEL.TRAINABLE
      - BASE_MODEL.INPUT_SHAPE
      - UPDATED_BASE_MODEL.DROPOUT
      - UPDATED_BASE_MODEL.ACTIVATION
      - UPDATED_BASE_MODEL.KERNEL_REGULARIZER_L2
      - TRAINING.LEARNING_RATE
      - TRAINING.OPTIMIZER
      - TRAINING.LOSS
      - TRAINING.METRICS
    outs:
      - artifacts/prepare_base_model

  training:
    cmd: python src/cnnClassifier/pipeline/stage_03_model_trainer.py
    deps:
      - src/cnnClassifier/pipeline/stage_03_model_trainer.py
      - config/config.yaml
      - params.yaml
      - artifacts/data_ingestion
      - artifacts/prepare_base_model
    params:
      - IMAGE_HEIGHT
      - IMAGE_WIDTH
      - CLASSES
      - AUGMENTATION
      - BATCH_SIZE
      - TRAINING.EPOCHS
      - TRAINING.LEARNING_RATE
      - TRAINING.OPTIMIZER
      - TRAINING.LOSS
      - TRAINING.METRICS
    outs:
      - artifacts/training

  evaluation:
    cmd: python src/cnnClassifier/pipeline/stage_04_model_evaluation_mlflow.py
    deps:
      - src/cnnClassifier/pipeline/stage_04_model_evaluation_mlflow.py
      - config/config.yaml
      - params.yaml
      - artifacts/data_ingestion
      - artifacts/training
    params:
      - IMAGE_HEIGHT
      - IMAGE_WIDTH
      - BATCH_SIZE
    metrics:
      - scores.json:
          cache: false
